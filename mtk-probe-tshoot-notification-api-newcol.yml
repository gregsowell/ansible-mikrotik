---
- name: Reach out to remote probes and troubleshoot routing
  hosts: all
  gather_facts: no
  vars:
    ansible_command_timeout: 120
    destIP: 1.1.1.1
    srcIP: 0.0.0.0

    send_slack: True
    send_email: False
    send_snow: False

    email_host: smtp.gmail.com
    email_port: 587
    email_to: Greg Sowell <ILoveTacos@gregsowell.com>
    email_subject: Ansible-report
#    email_user: gmailuseraccount@gmail.com
#    email_pword: password-for-gmail-account

    slack_channel: '#ansible'
#    slack_token: thisis/thetoken/givenbyslackwebhook

#    snow_username: admin
#    snow_password: mysnowpword
#    snow_instance: dev99999
#    snow_caller_id: Abel Tuter
    snow_caller_id: System Administrator

  tasks:

    - name: Ping Destination
      community.routeros.command:
        commands:
          - "/ping count=10 {{ destIP }}"
      register: pings

    - name: Ping Source
      community.routeros.command:
        commands:
          - "/ping count=10 {{ srcIP }}"
      register: pings_source
      when: srcIP != "0.0.0.0"

    - name: Traceroute Destinations
      community.routeros.command:
        commands:
          - "/tool traceroute count=1 {{ destIP }}"
      register: traces

    - name: Traceroute source
      community.routeros.command:
        commands:
          - "/tool traceroute count=1 {{ srcIP }}"
      register: traces_source
      when: srcIP != "0.0.0.0"

    - name: display output for no source
      ansible.builtin.set_fact:
        send_msg: "##################Testing to {{ destIP }}##################\n##################{{ inventory_hostname }}##################\n===pings===\n{{ pings.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n===traces===\n{{ traces.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n\n"
      when: srcIP == "0.0.0.0"

    - name: display output with source
      ansible.builtin.set_fact:
        send_msg: "##################Testing to {{ destIP }}##################\n##################{{ inventory_hostname }}##################\n===pings destination===\n{{ pings.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n===traces destination===\n{{ traces.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','')}}\n===pings source===\n{{ pings_source.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n===traces source===\n{{ traces_source.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n\n"
      when: srcIP != "0.0.0.0"

    - name: create SNOW incident
      when: send_snow
      run_once: True
      ignore_errors: True
      block:
        - name: Create an incident
          servicenow.servicenow.snow_record:
            username: "{{ snow_username }}"
            password: "{{ snow_password }}"
            instance: "{{ snow_instance }}"
            state: present
            data:
              short_description: "Zab-Tower - Device Down - {{ destIP }}"
#              description: Something here useful
              caller_id: "{{ snow_caller_id }}"
              severity: 3
              priority: 5
          register: new_incident

        - ansible.builtin.set_fact:
            ticket_number: "{{ new_incident.record.number }}"

    - name: debug new_incident
      when: ticket_number is defined
      run_once: True
      ansible.builtin.debug:
        msg: "Ticket Number is: {{ ticket_number | default('None')}}"


    - name: create SNOW incident
      when: send_snow
      ignore_errors: True
      block:
        - name: Add pings
          servicenow.servicenow.snow_record:
            username: "{{ snow_username }}"
            password: "{{ snow_password }}"
            instance: "{{ snow_instance }}"
            state: present
            number: "{{ ticket_number }}"
            data:
              comments: "##################{{ inventory_hostname }}##################\n===pings===\n{{ pings.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n"

        - name: Add traces
          servicenow.servicenow.snow_record:
            username: "{{ snow_username }}"
            password: "{{ snow_password }}"
            instance: "{{ snow_instance }}"
            state: present
            number: "{{ ticket_number }}"
            data:
              comments: "##################{{ inventory_hostname }}##################\n===traces===\n{{ traces.stdout|join('\n') | regex_replace('\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n','') }}\n"


    - name: send message through slack
      when: send_slack
      community.general.slack:
        token: "{{ slack_token }}"
#        msg: |
#          "SNOW ticket {{ new_incident.record.number | default('None')}}"
#          "{{ send_msg }}"
        attachments:
          - text: "{{ send_msg }}"
            title: "SNOW ticket {{ new_incident.record.number | default('None')}}"
            title_link: "https://{{ snow_instance }}.service-now.com/nav_to.do?uri=incident.do?sysparm_query=number={{ new_incident.record.number | default('None')}}"
        channel: "{{ slack_channel }}"
#        thread_id: 1539917263.000100
        parse: 'none'
      delegate_to: localhost

    - name: Sending an e-mail using Gmail SMTP servers
      when: send_email
      community.general.mail:
        host: "{{ email_host }}"
        port: "{{ email_port }}"
        username: "{{ email_user }}"
        password: "{{ email_pword }}"
        to: "{{ email_to }}"
        subject: "{{ email_subject }}"
#        body: "{{ send_msg }}"
        body: |
          "SNOW ticket https://{{ snow_instance }}.service-now.com/nav_to.do?uri=incident.do?sysparm_query=number={{ new_incident.record.number | default('None')}}"
          "{{ send_msg }}"
      delegate_to: localhost
